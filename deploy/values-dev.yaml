applicationName: "inventory"

labels:
  group: com.stakater
  team: nordmart

deployment:
  replicas: 2
  volumes: []
  volumeMounts: []
  securityContext: []
  podLabels: []
  additionalPodAnnotations:
    app: "inventory"
    team: "nordmart"
  image:
    repository: DOCKER_REPOSITORY_URL
    tag: IMAGE_TAG
  env:
  - name: JAEGER_ENDPOINT
    value: "http://jaeger-collector.istio-system:14268/api/traces"
  - name: POSTGRESQL_HOST
    value: "stakater-nordmart-inventory-postgresql-svc"
  - name: POSTGRESQL_PASSWORD
    valueFrom:
      secretKeyRef:
        name: inventory-postgresql-secret
        key: POSTGRES_PASSWORD    
  - name: DB_NAME
    value: "inventory"
  probes:
    readinessProbe:
      failureThreshold: 3
      periodSeconds: 60
      successThreshold: 1
      timeoutSeconds: 1
      initialDelaySeconds: 15
      httpGet:
        path: /actuator/health
        port: 8080
    livenessProbe:
      failureThreshold: 3
      periodSeconds: 60
      successThreshold: 1
      timeoutSeconds: 1
      initialDelaySeconds: 15
      httpGet:
        path: /actuator/health
        port: 8080

# Role based access control
rbac:
  enabled: true
  serviceAccount:
    enabled: true

# Service configuration
service:
  ports:
  - port: 8080
    name: http
    targetPort: 8080

# Openshift route
route:
  enabled: true
  annotations: []
  additionalLabels: 
    router: default
  port:
    targetPort: http
  wildcardPolicy: None
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect

# Service monitor to collect prometheus metrices
serviceMonitor:
  enabled: true
  
  # List of the endpoints of service from which prometheus will scrape data
  endpoints:
  - interval: 5s
    path: /prometheus
    port: http
